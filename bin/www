#!/usr/bin/env node
const debug = require('debug')('millegrilles:coupdoeil:www')
const debugAutorisation = require('debug')('millegrilles:coupdoeil:www:autorisation')
const express = require('express')
const socketApp = require('../models/appSocketIo')
const server6 = require('@dugrema/millegrilles.nodejs/src/server6')
const {initialiser: initialiserCoupdoeil} = require('../routes/coupdoeil')
const { extraireExtensionsMillegrille } = require('@dugrema/millegrilles.utiljs/src/forgecommon')

async function init() {

  // Initialiser server et routes
  const app = express()
  const {server, socketIo, amqpdao: amqpdaoInst} = await server6(
    app, socketApp.configurerEvenements, {pathApp: '/coupdoeil', verifierAutorisation})
  
  app.use('/coupdoeil', initialiserCoupdoeil(amqpdaoInst))

}

function verifierAutorisation(socket, securite, certificatForge) {
  debugAutorisation("Verifier autorisation cert %O", certificatForge)
  if(securite === '3.protege') {
    const extensions = extraireExtensionsMillegrille(certificatForge)
    debugAutorisation("www.verifierAutorisation extensions %O", extensions)

    // Deleguation globale donne tous les acces
    if(['proprietaire', 'delegue'].includes(extensions.delegationGlobale)) {
      debugAutorisation("Usager proprietaire, acces 3.protege OK")
      return true
    }

    // Delegation au domaine coupdoeil
    if(extensions.delegationsDomaines.includes('coupdoeil')) {
      debugAutorisation("Usager delegue domaine coupdoeil, acces 3.protege OK")
      return true
    }

    debugAutorisation("Usager acces 3.protege refuse")
  }
  return false
}

init()
