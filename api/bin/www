#!/usr/bin/env node

/**
 * Module dependencies.
 */

const app = require('../app');
const debug = require('debug')('api:server');
//var http = require('http');
const FS = require("fs");
const Path = require('path');
const Spdy = require('spdy');


/**
 * Get port from environment and store in Express.
 */

var port = normalizePort(process.env.PORT || '3000');
const hostIp = process.env.HOST || 'dev2.maple.mdugre.info';
const key_path = process.env.PRIVKEY;
const cert_path = process.env.CERT;

/**
 * Create SPDY/http2 server.
 */

const config = {
    hostIp: hostIp,
    cert: FS.readFileSync(cert_path),
    key: FS.readFileSync(key_path)
};

const server = Spdy.createServer(config, app).listen(port, () => {
    console.log('Server is listening at https://localhost:' + port + '. Ctrl^C to stop it.');
});

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}
